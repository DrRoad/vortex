master_county_data <- read.csv("master_county_data.csv")
View(master_county_data)
getwd()
setwd(../output/)
setwd("../output/")
master_county_data <- read.csv("master_county_data.csv")
View(master_county_data)
getwd()
setwd("../output/master_county_data")
master_county_data <- read.csv("master_county_data.csv")
View(master_county_data)
cleanedsocial <- read.csv("C:/Users/User1/Desktop/Stat259/vortex/vortex/output/master_county_data/cleanedsocial.csv")
View(cleanedsocial)
riskdata<- master_county_data[,c("state_fips",
"county_fips",
"CensusRace...STNAME",
"CensusRace...CTYNAME",
"land_area",
"hail...total_intensity",
"tornado...total_intensity",
"wind...total_intensity"
)]
riskdata$highfirerisk<- master_county_data$Fire_risk_2012...risk_4+master_county_data$Fire_risk_2012...risk_5
# Rename columns to avoid spaces
colnames(riskdata)[colnames(riskdata)=="CensusRace...STNAME"] <- "STNAME"
colnames(riskdata)[colnames(riskdata)=="CensusRace...CTYNAME"] <- "CTYNAME"
colnames(riskdata)[colnames(riskdata)=="hail...total_intensity"] <- "hail_tot_intensity"
colnames(riskdata)[colnames(riskdata)=="tornado...total_intensity"] <- "tornado_tot_intensity"
colnames(riskdata)[colnames(riskdata)=="wind...total_intensity"] <- "wind_tot_intensity"
socialdata<- master_county_data[,c("state_fips",
"county_fips",
"CensusRace...STNAME",
"CensusRace...CTYNAME",
"land_area",
"natural_amenities...Scale",
"CensusRace...TOT_POP",
"CensusRace...H",
"poverty_pct_2014...PCTPOVALL_2014", "incomelower48...Dollars",
"unemployed_2014...Unemployed_2014")]
colnames(socialdata)[colnames(socialdata)=="CensusRace...STNAME"] <- "STNAME"
colnames(socialdata)[colnames(socialdata)=="CensusRace...CTYNAME"] <- "CTYNAME"
colnames(socialdata)[colnames(socialdata)=="natural_amenities...Scale"] <- "Natural_Amenities"
colnames(socialdata)[colnames(socialdata)=="CensusRace...TOT_POP"] <- "TOTPOP"
colnames(socialdata)[colnames(socialdata)=="CensusRace...H"] <- "CensusRace_H"
colnames(socialdata)[colnames(socialdata)=="poverty_pct_2014...PCTPOVALL_2014"] <- "PCTPOVALL_2014"
colnames(socialdata)[colnames(socialdata)=="incomelower48...Dollars"] <- "Income_Dollars"
colnames(socialdata)[colnames(socialdata)=="unemployed_2014...Unemployed_2014" <- "NumbUnemply"]
socialdata$PercMino<- (master_county_data$CensusRace...TOT_POP - master_county_data$CensusRace...WA)/master_county_data$CensusRace...TOT_POP
socialdata$PercHisp<- master_county_data$CensusRace...H/master_county_data$CensusRace...TOT_POP
socialdata$PercBlk<- master_county_data$CensusRace...BA/master_county_data$CensusRace...TOT_POP
socialdata$PercWh<- master_county_data$CensusRace...WA/master_county_data$CensusRace...TOT_POP
socialdata$PercAs<- master_county_data$CensusRace...AA/master_county_data$CensusRace...TOT_POP
socialdata$PercPIHI<- master_county_data$CensusRace...Na/master_county_data$CensusRace...TOT_POP
socialdata$PercAI<- master_county_data$CensusRace...IA/master_county_data$CensusRace...TOT_POP
## temporary fix of NAs##
#countydata<- countydata[1:3142,]
write.csv(riskdata, "cleanedrisk.csv")
write.csv(socialdata, "cleanedsocial.csv" )
View(socialdata)
socialdata<- master_county_data[,c("state_fips",
"county_fips",
"CensusRace...STNAME",
"CensusRace...CTYNAME",
"land_area",
"natural_amenities...Scale",
"CensusRace...TOT_POP",
"CensusRace...H",
"poverty_pct_2014...PCTPOVALL_2014", "incomelower48...Dollars",
"unemployed_2014...Unemployed_2014")]
colnames(socialdata)[colnames(socialdata)=="CensusRace...STNAME"] <- "STNAME"
colnames(socialdata)[colnames(socialdata)=="CensusRace...CTYNAME"] <- "CTYNAME"
colnames(socialdata)[colnames(socialdata)=="natural_amenities...Scale"] <- "Natural_Amenities"
colnames(socialdata)[colnames(socialdata)=="CensusRace...TOT_POP"] <- "TOTPOP"
colnames(socialdata)[colnames(socialdata)=="CensusRace...H"] <- "CensusRace_H"
colnames(socialdata)[colnames(socialdata)=="poverty_pct_2014...PCTPOVALL_2014"] <- "PCTPOVALL_2014"
colnames(socialdata)[colnames(socialdata)=="incomelower48...Dollars"] <- "Income_Dollars"
colnames(socialdata)[colnames(socialdata)=="unemployed_2014...Unemployed_2014"] <- "NumbUnemply"
socialdata$PercMino<- (master_county_data$CensusRace...TOT_POP - master_county_data$CensusRace...WA)/master_county_data$CensusRace...TOT_POP
socialdata$PercHisp<- master_county_data$CensusRace...H/master_county_data$CensusRace...TOT_POP
socialdata$PercBlk<- master_county_data$CensusRace...BA/master_county_data$CensusRace...TOT_POP
socialdata$PercWh<- master_county_data$CensusRace...WA/master_county_data$CensusRace...TOT_POP
socialdata$PercAs<- master_county_data$CensusRace...AA/master_county_data$CensusRace...TOT_POP
socialdata$PercPIHI<- master_county_data$CensusRace...Na/master_county_data$CensusRace...TOT_POP
socialdata$PercAI<- master_county_data$CensusRace...IA/master_county_data$CensusRace...TOT_POP
## temporary fix of NAs##
#countydata<- countydata[1:3142,]
write.csv(riskdata, "cleanedrisk.csv")
write.csv(socialdata, "cleanedsocial.csv" )
View(socialdata)
get wd
getwd()
setwd("../..")
install.packages(c("dplyr", "stringr", "rgdal", "raster", "rgeos"))
library(dplyr)
library(stringr)
library(rgdal)
library(raster)
library(rgeos)
files <- list.files("output/tidy_county_data", full.names=T)
tables <- lapply(files, read.csv, stringsAsFactors=F)
# build a combined state_county_fips variable in all tables that lack it
tables <- lapply(tables, function(x){
if(!"state_county_fips" %in% names(x)){
x$state_county_fips <- paste0(str_pad(x$state_fips, 2, "left", 0),
str_pad(x$county_fips, 3, "left", 0))
}else{
x$state_county_fips <- str_pad(x$state_county_fips, 5, "left", 0)
}
return(x)
})
# add dataset-specific tag to dataset-specific variable names to avoid name conflicts
for(i in 1:length(tables)) names(tables[[i]])[!grepl("_fips", names(tables[[i]]))] <-
paste0(gsub(".csv", "", basename(files[i])), "...", names(tables[[i]])[!grepl("_fips", names(tables[[i]]))])
# merge datasets
master <- Reduce(full_join, tables)
# add county area to table
counties <- readOGR("raw_data/census/us_counties_shapefile", "cb_2014_us_county_500k")
counties <- crop(counties, extent(-126, -59, 22, 53)) # crop to US48
counties <- data.frame(state_county_fips=counties$GEOID,
land_area=gArea(counties, byid=T))
master <- left_join(master, counties)
write.csv(master, "output/master_county_data/master_county_data.csv", row.names=F)
View(master)
setwd("/output/master_county_data")
getwd
getwd()
setwd("~/output/master_county_data")
setwd("output/master_county_data")
master_county_data <- read.csv("master_county_data.csv")
riskdata<- master_county_data[,c("state_fips",
"county_fips",
"CensusRace...STNAME",
"CensusRace...CTYNAME",
"land_area",
"hail...total_intensity",
"tornado...total_intensity",
"wind...total_intensity"
)]
riskdata$highfirerisk<- master_county_data$Fire_risk_2012...risk_4+master_county_data$Fire_risk_2012...risk_5
# Rename columns to avoid spaces
colnames(riskdata)[colnames(riskdata)=="CensusRace...STNAME"] <- "STNAME"
colnames(riskdata)[colnames(riskdata)=="CensusRace...CTYNAME"] <- "CTYNAME"
colnames(riskdata)[colnames(riskdata)=="hail...total_intensity"] <- "hail_tot_intensity"
colnames(riskdata)[colnames(riskdata)=="tornado...total_intensity"] <- "tornado_tot_intensity"
colnames(riskdata)[colnames(riskdata)=="wind...total_intensity"] <- "wind_tot_intensity"
socialdata<- master_county_data[,c("state_fips",
"county_fips",
"CensusRace...STNAME",
"CensusRace...CTYNAME",
"land_area",
"natural_amenities...Scale",
"CensusRace...TOT_POP",
"CensusRace...H",
"poverty_pct_2014...PCTPOVALL_2014", "incomelower48...Dollars",
"unemployed_2014...Unemployment_rate_2014",
"unemployed_2014...Median_Household_Income_2014")]
colnames(socialdata)[colnames(socialdata)=="CensusRace...STNAME"] <- "STNAME"
colnames(socialdata)[colnames(socialdata)=="CensusRace...CTYNAME"] <- "CTYNAME"
colnames(socialdata)[colnames(socialdata)=="natural_amenities...Scale"] <- "Natural_Amenities"
colnames(socialdata)[colnames(socialdata)=="CensusRace...TOT_POP"] <- "TOTPOP"
colnames(socialdata)[colnames(socialdata)=="CensusRace...H"] <- "CensusRace_H"
colnames(socialdata)[colnames(socialdata)=="poverty_pct_2014...PCTPOVALL_2014"] <- "PCTPOVALL_2014"
colnames(socialdata)[colnames(socialdata)=="incomelower48...Dollars"] <- "Income_Dollars"
colnames(socialdata)[colnames(socialdata)=="unemployed_2014...Unemployed_rate_2014"] <- "UnemplyRate"
colnames(socialdata)[colnames(socialdata)=="unemployed_2014...Median_Household_Income_2014"] <- "MedianHouseholdIncome_UE"
socialdata$PercMino<- (master_county_data$CensusRace...TOT_POP - master_county_data$CensusRace...WA)/master_county_data$CensusRace...TOT_POP
socialdata$PercHisp<- master_county_data$CensusRace...H/master_county_data$CensusRace...TOT_POP
socialdata$PercBlk<- master_county_data$CensusRace...BA/master_county_data$CensusRace...TOT_POP
socialdata$PercWh<- master_county_data$CensusRace...WA/master_county_data$CensusRace...TOT_POP
socialdata$PercAs<- master_county_data$CensusRace...AA/master_county_data$CensusRace...TOT_POP
socialdata$PercPIHI<- master_county_data$CensusRace...Na/master_county_data$CensusRace...TOT_POP
socialdata$PercAI<- master_county_data$CensusRace...IA/master_county_data$CensusRace...TOT_POP
riskdata<-na.omit(riskdata)
# Rename columns to avoid spaces
colnames(riskdata)[colnames(riskdata)=="CensusRace...STNAME"] <- "STNAME"
colnames(riskdata)[colnames(riskdata)=="CensusRace...CTYNAME"] <- "CTYNAME"
colnames(riskdata)[colnames(riskdata)=="hail...total_intensity"] <- "hail_tot_intensity"
colnames(riskdata)[colnames(riskdata)=="tornado...total_intensity"] <- "tornado_tot_intensity"
colnames(riskdata)[colnames(riskdata)=="wind...total_intensity"] <- "wind_tot_intensity"
socialdata<- master_county_data[,c("state_fips",
"county_fips",
"CensusRace...STNAME",
"CensusRace...CTYNAME",
"land_area",
"natural_amenities...Scale",
"CensusRace...TOT_POP",
"CensusRace...H",
"poverty_pct_2014...PCTPOVALL_2014", "incomelower48...Dollars",
"unemployed_2014...Unemployment_rate_2014",
"unemployed_2014...Median_Household_Income_2014")]
colnames(socialdata)[colnames(socialdata)=="CensusRace...STNAME"] <- "STNAME"
colnames(socialdata)[colnames(socialdata)=="CensusRace...CTYNAME"] <- "CTYNAME"
colnames(socialdata)[colnames(socialdata)=="natural_amenities...Scale"] <- "Natural_Amenities"
colnames(socialdata)[colnames(socialdata)=="CensusRace...TOT_POP"] <- "TOTPOP"
colnames(socialdata)[colnames(socialdata)=="CensusRace...H"] <- "CensusRace_H"
colnames(socialdata)[colnames(socialdata)=="poverty_pct_2014...PCTPOVALL_2014"] <- "PCTPOVALL_2014"
colnames(socialdata)[colnames(socialdata)=="incomelower48...Dollars"] <- "Income_Dollars"
colnames(socialdata)[colnames(socialdata)=="unemployed_2014...Unemployed_rate_2014"] <- "UnemplyRate"
colnames(socialdata)[colnames(socialdata)=="unemployed_2014...Median_Household_Income_2014"] <- "MedianHouseholdIncome_UE"
socialdata$PercMino<- (master_county_data$CensusRace...TOT_POP - master_county_data$CensusRace...WA)/master_county_data$CensusRace...TOT_POP
socialdata$PercHisp<- master_county_data$CensusRace...H/master_county_data$CensusRace...TOT_POP
socialdata$PercBlk<- master_county_data$CensusRace...BA/master_county_data$CensusRace...TOT_POP
socialdata$PercWh<- master_county_data$CensusRace...WA/master_county_data$CensusRace...TOT_POP
socialdata$PercAs<- master_county_data$CensusRace...AA/master_county_data$CensusRace...TOT_POP
socialdata$PercPIHI<- master_county_data$CensusRace...Na/master_county_data$CensusRace...TOT_POP
socialdata$PercAI<- master_county_data$CensusRace...IA/master_county_data$CensusRace...TOT_POP
## temporary fix of NAs##
#countydata<- countydata[1:3142,]
write.csv(riskdata, "cleanedrisk.csv")
write.csv(socialdata, "cleanedsocial.csv" )
View(socialdata)
socialdata<-na.omit(socialdata)
colnames(socialdata)[colnames(socialdata)=="CensusRace...STNAME"] <- "STNAME"
colnames(socialdata)[colnames(socialdata)=="CensusRace...CTYNAME"] <- "CTYNAME"
colnames(socialdata)[colnames(socialdata)=="natural_amenities...Scale"] <- "Natural_Amenities"
colnames(socialdata)[colnames(socialdata)=="CensusRace...TOT_POP"] <- "TOTPOP"
colnames(socialdata)[colnames(socialdata)=="CensusRace...H"] <- "CensusRace_H"
colnames(socialdata)[colnames(socialdata)=="poverty_pct_2014...PCTPOVALL_2014"] <- "PCTPOVALL_2014"
colnames(socialdata)[colnames(socialdata)=="incomelower48...Dollars"] <- "Income_Dollars"
colnames(socialdata)[colnames(socialdata)=="unemployed_2014...Unemployed_rate_2014"] <- "UnemplyRate"
colnames(socialdata)[colnames(socialdata)=="unemployed_2014...Median_Household_Income_2014"] <- "MedianHouseholdIncome_UE"
socialdata$PercMino<- (master_county_data$CensusRace...TOT_POP - master_county_data$CensusRace...WA)/master_county_data$CensusRace...TOT_POP
socialdata$PercHisp<- master_county_data$CensusRace...H/master_county_data$CensusRace...TOT_POP
socialdata$PercBlk<- master_county_data$CensusRace...BA/master_county_data$CensusRace...TOT_POP
socialdata$PercWh<- master_county_data$CensusRace...WA/master_county_data$CensusRace...TOT_POP
socialdata$PercAs<- master_county_data$CensusRace...AA/master_county_data$CensusRace...TOT_POP
socialdata$PercPIHI<- master_county_data$CensusRace...Na/master_county_data$CensusRace...TOT_POP
socialdata$PercAI<- master_county_data$CensusRace...IA/master_county_data$CensusRace...TOT_POP
## temporary fix of NAs##
#countydata<- countydata[1:3142,]
write.csv(riskdata, "cleanedrisk.csv")
write.csv(socialdata, "cleanedsocial.csv" )
#dangerous dropping of NAs
master_county_data<-na.omit(master_county_data)
riskdata<- master_county_data[,c("state_fips",
"county_fips",
"CensusRace...STNAME",
"CensusRace...CTYNAME",
"land_area",
"hail...total_intensity",
"tornado...total_intensity",
"wind...total_intensity"
)]
riskdata$highfirerisk<- master_county_data$Fire_risk_2012...risk_4+master_county_data$Fire_risk_2012...risk_5
# Rename columns to avoid spaces
colnames(riskdata)[colnames(riskdata)=="CensusRace...STNAME"] <- "STNAME"
colnames(riskdata)[colnames(riskdata)=="CensusRace...CTYNAME"] <- "CTYNAME"
colnames(riskdata)[colnames(riskdata)=="hail...total_intensity"] <- "hail_tot_intensity"
colnames(riskdata)[colnames(riskdata)=="tornado...total_intensity"] <- "tornado_tot_intensity"
colnames(riskdata)[colnames(riskdata)=="wind...total_intensity"] <- "wind_tot_intensity"
socialdata<- master_county_data[,c("state_fips",
"county_fips",
"CensusRace...STNAME",
"CensusRace...CTYNAME",
"land_area",
"natural_amenities...Scale",
"CensusRace...TOT_POP",
"CensusRace...H",
"poverty_pct_2014...PCTPOVALL_2014", "incomelower48...Dollars",
"unemployed_2014...Unemployment_rate_2014",
"unemployed_2014...Median_Household_Income_2014")]
colnames(socialdata)[colnames(socialdata)=="CensusRace...STNAME"] <- "STNAME"
colnames(socialdata)[colnames(socialdata)=="CensusRace...CTYNAME"] <- "CTYNAME"
colnames(socialdata)[colnames(socialdata)=="natural_amenities...Scale"] <- "Natural_Amenities"
colnames(socialdata)[colnames(socialdata)=="CensusRace...TOT_POP"] <- "TOTPOP"
colnames(socialdata)[colnames(socialdata)=="CensusRace...H"] <- "CensusRace_H"
colnames(socialdata)[colnames(socialdata)=="poverty_pct_2014...PCTPOVALL_2014"] <- "PCTPOVALL_2014"
colnames(socialdata)[colnames(socialdata)=="incomelower48...Dollars"] <- "Income_Dollars"
colnames(socialdata)[colnames(socialdata)=="unemployed_2014...Unemployed_rate_2014"] <- "UnemplyRate"
colnames(socialdata)[colnames(socialdata)=="unemployed_2014...Median_Household_Income_2014"] <- "MedianHouseholdIncome_UE"
socialdata$PercMino<- (master_county_data$CensusRace...TOT_POP - master_county_data$CensusRace...WA)/master_county_data$CensusRace...TOT_POP
socialdata$PercHisp<- master_county_data$CensusRace...H/master_county_data$CensusRace...TOT_POP
socialdata$PercBlk<- master_county_data$CensusRace...BA/master_county_data$CensusRace...TOT_POP
socialdata$PercWh<- master_county_data$CensusRace...WA/master_county_data$CensusRace...TOT_POP
socialdata$PercAs<- master_county_data$CensusRace...AA/master_county_data$CensusRace...TOT_POP
socialdata$PercPIHI<- master_county_data$CensusRace...Na/master_county_data$CensusRace...TOT_POP
socialdata$PercAI<- master_county_data$CensusRace...IA/master_county_data$CensusRace...TOT_POP
## temporary fix of NAs##
#countydata<- countydata[1:3142,]
write.csv(riskdata, "cleanedrisk.csv")
write.csv(socialdata, "cleanedsocial.csv" )
View(socialdata)
getwd()
set wd(../..)
setwd(../..)
setwd("../..")
load_data <- function(path){
d <- read.csv(path, header=F, stringsAsFactors=F)
varnames <- c("id", "year", "month", "day", "date", "time", "time_zone",
"state", "state_fips", "state_code", "intensity",
"injuries", "fatalities", "loss", "crop_loss",
"slat", "slon", "elat", "elon", "length", "width",
"num_states", "state_num", "segment",
paste0("county_fips_", 1:4))
if(grepl("wind", basename(path))) varnames <- c(varnames, "mag_type")
names(d) <- varnames
return(d)
}
# tabulate weather events per county
countify <- function(data){
require(stringr)
data <- data %>%
mutate(state_fips = str_pad(state_fips, 2, "left", "0"),
county_fips = str_pad(county_fips_1, 3, "left", "0")) %>%
group_by(state_fips, county_fips) %>%
summarize(n_storms=n(),
total_intensity=sum(intensity))
return(data)
}
# make shapefile from county data table
geojoin <- function(data, shapefile){
#shapefile@data <- mutate_each(shapefile@data, funs(as.integer), STATEFP, COUNTYFP)
shapefile@data <- left_join(shapefile@data, data, by=c("STATEFP"="state_fips", "COUNTYFP"="county_fips"))
return(shapefile)
}
countify <- function(data){
require(stringr)
data <- data %>%
mutate(state_fips = str_pad(state_fips, 2, "left", "0"),
county_fips = str_pad(county_fips_1, 3, "left", "0")) %>%
group_by(state_fips, county_fips) %>%
subset(data, county_fips!="000")
summarize(n_storms=n(),
total_intensity=sum(intensity))
return(data)
}
d <- lapply(files, load_data)
countify <- function(data){
require(stringr)
data <- data %>%
mutate(state_fips = str_pad(state_fips, 2, "left", "0"),
county_fips = str_pad(county_fips_1, 3, "left", "0")) %>%
group_by(state_fips, county_fips) %>%
subset(data, county_fips!="000")  %>%
summarize(n_storms=n(),
total_intensity=sum(intensity))
return(data)
}
load_data <- function(path){
d <- read.csv(path, header=F, stringsAsFactors=F)
varnames <- c("id", "year", "month", "day", "date", "time", "time_zone",
"state", "state_fips", "state_code", "intensity",
"injuries", "fatalities", "loss", "crop_loss",
"slat", "slon", "elat", "elon", "length", "width",
"num_states", "state_num", "segment",
paste0("county_fips_", 1:4))
if(grepl("wind", basename(path))) varnames <- c(varnames, "mag_type")
names(d) <- varnames
return(d)
}
files <- list.files("raw_data/tornado_wind_hail", pattern="\\.csv", full.names=T)
names(files) <- c("tornado", "hail", "wind")
####### processing ##########
d <- lapply(files, load_data)
d <- lapply(d, countify)
countify <- function(data){
require(stringr)
data <- data %>%
mutate(state_fips = str_pad(state_fips, 2, "left", "0"),
county_fips = str_pad(county_fips_1, 3, "left", "0")) %>%
group_by(state_fips, county_fips) %>%
county_fips!="000"  %>%     ## remove state only and US aggregate
summarize(n_storms=n(),
total_intensity=sum(intensity))
return(data)
}
countify <- function(data){
require(stringr)
data <- data %>%
mutate(state_fips = str_pad(state_fips, 2, "left", "0"),
county_fips = str_pad(county_fips_1, 3, "left", "0")) %>%
group_by(state_fips, county_fips) %>%
county_fips!="000"  %>%     ## remove state only and US aggregate
summarize(n_storms=n(),
total_intensity=sum(intensity))
return(data)
}
d <- lapply(d, countify)
countify <- function(data){
require(stringr)
data <- data %>%
mutate(state_fips = str_pad(state_fips, 2, "left", "0"),
county_fips = str_pad(county_fips_1, 3, "left", "0")) %>%
group_by(state_fips, county_fips) %>%
which(county_fips!="000")  %>%     ## remove state only and US aggregate
summarize(n_storms=n(),
total_intensity=sum(intensity))
return(data)
}
d <- lapply(d, countify)
countify <- function(data){
require(stringr)
data <- data %>%
mutate(state_fips = str_pad(state_fips, 2, "left", "0"),
county_fips = str_pad(county_fips_1, 3, "left", "0")) %>%
group_by(state_fips, county_fips) %>%
summarize(n_storms=n(),
total_intensity=sum(intensity))
return(subset(data, county_fips != 000)
}
countify <- function(data){
require(stringr)
data <- data %>%
mutate(state_fips = str_pad(state_fips, 2, "left", "0"),
county_fips = str_pad(county_fips_1, 3, "left", "0")) %>%
group_by(state_fips, county_fips) %>%
summarize(n_storms=n(),
total_intensity=sum(intensity))
return(subset(data, county_fips != 000))
}
d <- lapply(d, countify)
for(w in names(d)) write.csv(d[[w]], paste0("output/tidy_county_data/", w, ".csv"), row.names=F)
?filter
countify <- function(data){
require(stringr)
data <- data %>%
filter(county_fips!= NA) %>%
mutate(state_fips = str_pad(state_fips, 2, "left", "0"),
county_fips = str_pad(county_fips_1, 3, "left", "0")) %>%
group_by(state_fips, county_fips) %>%
summarize(n_storms=n(),
total_intensity=sum(intensity))
return(data)
}
d <- lapply(d, countify)
countify <- function(data){
require(stringr)
data <- data %>%
mutate(state_fips = str_pad(state_fips, 2, "left", "0"),
county_fips = str_pad(county_fips_1, 3, "left", "0")) %>%
group_by(state_fips, county_fips) %>%
summarize(n_storms=n(),
total_intensity=sum(intensity)) %>%
filter(county_fips!= NA)
return(data)
}
countify <- function(data){
require(stringr)
data <- data %>%
mutate(state_fips = str_pad(state_fips, 2, "left", "0"),
county_fips = str_pad(county_fips_1, 3, "left", "0")) %>%
group_by(state_fips, county_fips) %>%
summarize(n_storms=n(),
total_intensity=sum(intensity)) %>%
filter(county_fips!= NA)
return(data)
}
d <- lapply(files, load_data)
d <- lapply(d, countify)
for(w in names(d)) write.csv(d[[w]], paste0("output/tidy_county_data/", w, ".csv"), row.names=F)
countify <- function(data){
require(stringr)
data <- data %>%
mutate(state_fips = str_pad(state_fips, 2, "left", "0"),
county_fips = str_pad(county_fips_1, 3, "left", "0")) %>%
group_by(state_fips, county_fips) %>%
summarize(n_storms=n(),
total_intensity=sum(intensity)) %>%
filter(county_fips != 000)
return(data)
}
d <- lapply(files, load_data)
d <- lapply(d, countify)
countify <- function(data){
require(stringr)
data <- data %>%
mutate(state_fips = str_pad(state_fips, 2, "left", "0"),
county_fips = str_pad(county_fips_1, 3, "left", "0")) %>%
group_by(state_fips, county_fips) %>%
summarize(n_storms=n(),
total_intensity=sum(intensity))
data<- filter(data, county_fips != 000)
return(data)
}
d <- lapply(d, countify)
d <- lapply(files, load_data)
d <- lapply(d, countify)
countify <- function(data){
require(stringr)
data <- data %>%
mutate(state_fips = str_pad(state_fips, 2, "left", "0"),
county_fips = str_pad(county_fips_1, 3, "left", "0")) %>%
group_by(state_fips, county_fips) %>%
summarize(n_storms=n(),
total_intensity=sum(intensity))
data<- filter(data, county_fips != "000")
return(data)
}
library(beepr)
d <- lapply(files, load_data)
d <- lapply(d, countify)
for(w in names(d)) write.csv(d[[w]], paste0("output/tidy_county_data/", w, ".csv"), row.names=F)
