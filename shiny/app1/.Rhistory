colnames(socialdata)[colnames(socialdata)=="incomelower48...Dollars"] <- "Income_Dollars"
socialdata$PercUnempl<- as.numeric(master_county_data$unemployed_2014...Unemployed_2014)/master_county_data$CensusRace...TOT_POP
socialdata$PercMino<- (master_county_data$CensusRace...TOT_POP - master_county_data$CensusRace...WA)/master_county_data$CensusRace...TOT_POP
socialdata$PercHisp<- master_county_data$CensusRace...H/master_county_data$CensusRace...TOT_POP
socialdata$PercBlk<- master_county_data$CensusRace...BA/master_county_data$CensusRace...TOT_POP
socialdata$PercWh<- master_county_data$CensusRace...WA/master_county_data$CensusRace...TOT_POP
socialdata$PercAs<- master_county_data$CensusRace...AA/master_county_data$CensusRace...TOT_POP
socialdata$PercPIHI<- master_county_data$CensusRace...Na/master_county_data$CensusRace...TOT_POP
socialdata$PercAI<- master_county_data$CensusRace...IA/master_county_data$CensusRace...TOT_POP
## temporary fix of NAs##
#countydata<- countydata[1:3142,]
write.csv(riskdata, "cleanedrisk.csv")
write.csv(socialdata, "cleanedsocial.csv" )
View(socialdata)
setwd("C:\Users\Carmen\vortex\output")
setwd("C:\Users\Carmen\Desktop\vortex\output")
setwd("C:Users\Carmen\Desktop\vortex\output")
setwd("C:/Users/Carmen/Desktop/vortex/output")
setwd("C:/Users/Carmen/Desktop/vortex/output/master_county_data")
risk <- read.csv("cleanedrisk.csv")
social <- read.csv("cleanedsocial.csv")
view(social)
View(social)
names(risk)
?scale
risk$hail_scaled <- scale(hail_tot_intensity)
risk <- read.csv("cleanedrisk.csv")
risk$hail_scaled <- scale(hail_tot_intensity)
names(risk)
risk$hail_scaled <- scale(risk$hail_tot_intensity)
names(risk)
summary(hail_scaled)
summary(risk$hail_scaled)
hist(hail_scaled)
hist(risk$hail_scaled)
summary(risk$hail_scaled)
risk$scaled_2 <- (risk$hail_tot_intensity-min(risk$hail_tot_intensity))/(max(risk$hail_tot_intensity)-min(risk$hail_tot_intensity))
hist(risk$scaled_2)
summary(risk$scaled_2)
head(risk$hail_tot_intensity-min(risk$hail_tot_intensity))
min(risk$hail_tot_intensity)
summary(risk$hail_tot_intensity)
?min
min(risk$hail_tot_intensity, na.rm = TRUE)
hail_min <- min(risk$hail_tot_intensity, na.rm = TRUE)
hail_max <- min(risk$hail_tot_intensity, na.rm = TRUE)
risk$scaled_2 <- (risk$hail_tot_intensity-hail_min)/(hail_max-hail_min)
hist(risk$scaled_2)
hist(risk$scaled_2, breaks = 5)
hist(risk$scaled_2, na.rm = TRUE)
summary(risk$scaled_2)
hail_max <- max(risk$hail_tot_intensity, na.rm = TRUE)
risk$scaled_2 <- (risk$hail_tot_intensity-hail_min)/(hail_max-hail_min)
hist(risk$scaled_2, na.rm = TRUE)
hist(risk$scaled_2)
summary(risk$scaled_2)
hist(susbet(risk$scaled_2, na.exclude())
q
?hist
summary(na.omit(risk$scaled_2))
hist(na.omit(risk$scaled_2))
hist(risk$hail_tot_intensity)
hist(risk$hail_scaled)
hist(risk$hail_tot_intensity)
hist(na.omit(risk$scaled_2))
hist(risk$hail_scaled)
hist(risk$hail_tot_intensity)
setwd("C:/Users/Carmen/Dropbox (Stephens Lab)/SORTIE/FIA_Data/output_plot_file_dir")
load("FIA Plots All Cycles with Condition Data V2.1.Rdata") # This is plotcond
repeated_plots <- subset(plotcond, !is.na(plotcond$PREV_PLT_CN))
summary(repeated_plots$CYCLE)
## Only cycles in my data are 5 and 6. I'm ignoring the filtering for cycles step, maybe come back to it later
fia.trees <- fia.state.trees
ABCO <- subset(fia.trees, SPCD==15)
head(ABCO)
summary(ABCO$SPCD)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr, ylim=c(0,25))
2.54*5
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
Mode(fia.trees$DIA)
ABCO <- subset(fia.trees, SPCD==15, DIA >= 5)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr, ylim=c(0,25))
Mode(fia.trees$DIA)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr, ylim=c(0,25))
ABCO <- subset(fia.trees, SPCD==15, DIA => 5)
ABCO <- subset(fia.trees, SPCD==15, DIA > 5)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr)
ABCO <- subset(fia.trees, SPCD==15, DIA >= 5)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr)
x <- c(1,2,3,4,5,6,7)
y <- subset(x, x >=3)
y
hist(ABCO$DIA)
hist(ABCO$DIA, breaks=20)
hist(ABCO$DIA, breaks=30)
ABCO <- subset(fia.trees, SPCD==15, DIA >= 5)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr)
plot(ABCO$PREVDIA.cm ~ ABCO$Growth.mm.yr)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr)
plot(ABCO$Growth.mm.yr)
top.species <- sort(table(fia.trees$SPCD),decreasing = TRUE)[1:50]
top.species <- subset(top.species, !is.na(top.species))
# Add growth in mm/yr
fia.trees$Growth.mm.yr <- ((fia.trees$DIA - fia.trees$PREVDIA) * 25.4) / fia.trees$REMPER
ABCO <- subset(fia.trees, SPCD==15, DIA >= 5)
plot(ABCO$Growth.mm.yr)
plot(ABCO$Growth.mm.yr, ABCO$PREVDIA.cm)
plot(ABCO$Growth.mm.yr, ABCO$PREVDIA.cm, xlim=c(0,25))
ABCO <- subset(fia.trees, SPCD==15, fia.trees$PREVDIA.cm >= 50)
ABCO <- subset(fia.trees, fia.trees$SPCD==15, fia.trees$PREVDIA.cm >= 50)
setwd("C:/Users/Carmen/Dropbox (Stephens Lab)/SORTIE/FIA_Data/output_plot_file_dir")
load("FIA Plots All Cycles with Condition Data V2.1.Rdata") # This is plotcond
repeated_plots <- subset(plotcond, !is.na(plotcond$PREV_PLT_CN))
summary(repeated_plots$CYCLE)
## Only cycles in my data are 5 and 6. I'm ignoring the filtering for cycles step, maybe come back to it later
fia.trees <- fia.state.trees
top.species <- sort(table(fia.trees$SPCD),decreasing = TRUE)[1:50]
top.species <- subset(top.species, !is.na(top.species))
# Add growth in mm/yr
fia.trees$Growth.mm.yr <- ((fia.trees$DIA - fia.trees$PREVDIA) * 25.4) / fia.trees$REMPER
ABCO <- subset(fia.trees, fia.trees$SPCD==15, fia.trees$PREVDIA.cm >= 50)
names(fia.trees)
sort(names(fia.trees))
summary(ABCO$Growth.mm.yr)
fia.trees <- subset(fia.trees, fia.trees$SITECLCD == 2 & !is.na(fia.trees$PREV_PLT_CN))
nrow(fia.trees)
fia.trees <- subset(fia.trees, fia.trees$SITECLCD == 1 & !is.na(fia.trees$PREV_PLT_CN))
nrow(fia.trees)
# Explore the strange relationship between PREVDIA.cm and Growth.mm.yr (using fia.trees data frame from Step 9)
setwd("C:/Users/Carmen/Dropbox (Stephens Lab)/SORTIE/FIA_Data/output_plot_file_dir")
load("FIA Plots All Cycles with Condition Data V2.1.Rdata") # This is plotcond
repeated_plots <- subset(plotcond, !is.na(plotcond$PREV_PLT_CN))
summary(repeated_plots$CYCLE)
## Only cycles in my data are 5 and 6. I'm ignoring the filtering for cycles step, maybe come back to it later
fia.trees <- fia.state.trees
# Subset my data to only include second SITECLCD and only repeated plots
fia.trees.1 <- subset(fia.trees, fia.trees$SITECLCD == 1 & !is.na(fia.trees$PREV_PLT_CN))
nrow(fia.trees.1)
fia.trees.2 <- subset(fia.trees, fia.trees$SITECLCD == 2 & !is.na(fia.trees$PREV_PLT_CN))
nrow(fia.trees.2)
fia.trees.3 <- subset(fia.trees, fia.trees$SITECLCD == 3 & !is.na(fia.trees$PREV_PLT_CN))
nrow(fia.trees.3)
fia.trees$Growth.mm.yr <- ((fia.trees$DIA - fia.trees$PREVDIA) * 25.4) / fia.trees$REMPER
ABCO <- subset(fia.trees, fia.trees$SPCD==15, fia.trees$PREVDIA.cm >= 50)
names(fia.trees)
sort(names(fia.trees))
ABCO <- subset(fia.trees, fia.trees$SPCD==15 & fia.trees$PREVDIA.cm >= 50)
plot(ABCO$Growth.mm.yr, ABCO$PREVDIA.cm)
ABCO <- subset(fia.trees, fia.trees$SPCD==15 & fia.trees$PREVDIA.cm >= 50 & fia.trees$Growth.mm.yr > -10)
plot(ABCO$Growth.mm.yr, ABCO$PREVDIA.cm)
ABCO <- subset(fia.trees, fia.trees$SPCD==15 & fia.trees$PREVDIA.cm >= 50 & fia.trees$Growth.mm.yr > -10 & fia.trees$REMPER > 5)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr)
reg1 <- lm(ABCO$Growth.mm.yr ~ ABCO$PREVDIA.cm)
summary(reg1)
abline(reg1)
top.species
setwd("C:/Users/Carmen/Dropbox (Stephens Lab)/SORTIE/FIA_Data/Raw_Data")
species.codes <- read.csv("REF_SPECIES.csv")
species.codes <- subset(species.codes, species.codes$SPCD %in% top.species, select = c(SPCD, SPECIES_SYMBOL))
species.codes <- species.codes[order(species.codes$SPCD),] # I don't know why sorting by SPCD was so hard but here it is. Keywords searching: sort, order, sort data frame
names(top.species) <- species.codes$SPECIES_SYMBOL
species.codes # check that they match
top.species <- c(15, 81, 202,  20, 122, 818, 116, 117, 805, 108, 119, 631,
312, 361, 492, 264, 64, 231, 137, 352, 746, 251, 981, 839,
815, 351, 299, 431, 768, 103, 212, 475, 109, 821)
top.species <- sort(top.species)
# Create a simple table with the letter species code and number species code matching up
setwd("C:/Users/Carmen/Dropbox (Stephens Lab)/SORTIE/FIA_Data/Raw_Data")
species.codes <- read.csv("REF_SPECIES.csv")
species.codes <- subset(species.codes, species.codes$SPCD %in% top.species, select = c(SPCD, SPECIES_SYMBOL))
species.codes <- species.codes[order(species.codes$SPCD),] # I don't know why sorting by SPCD was so hard but here it is. Keywords searching: sort, order, sort data frame
names(top.species) <- species.codes$SPECIES_SYMBOL
species.codes # check that they match
hist(ABCO$DIA, breaks=30)
PIPO <- subset(fia.trees, fia.trees$SPCD==122 & fia.trees$PREVDIA.cm >= 50 & fia.trees$Growth.mm.yr > -10 & fia.trees$REMPER > 5)
plot(PIPO$PREVDIA.cm, PIPO$Growth.mm.yr)
reg1 <- lm(ABCO$Growth.mm.yr ~ ABCO$PREVDIA.cm)
reg1 <- lm(PIPO$Growth.mm.yr ~ PIPO$PREVDIA.cm)
abline(reg1)
plot(PIPO$PREVDIA.cm, PIPO$Growth.mm.yr)
abline(reg1)
summary(reg1)
ABCO <- subset(fia.trees.3, fia.trees.3$SPCD==15 & fia.trees.3$PREVDIA.cm >= 50 & fia.trees.3$Growth.mm.yr > -10 & fia.trees.3$REMPER > 5)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr)
fia.trees.3 <- subset(fia.trees, fia.trees$SITECLCD == 3 & !is.na(fia.trees$PREV_PLT_CN))
ABCO <- subset(fia.trees.3, fia.trees.3$SPCD==15 & fia.trees.3$PREVDIA.cm >= 50 & fia.trees.3$Growth.mm.yr > -10 & fia.trees.3$REMPER > 5)
head(ABCO)
ABCO <- subset(fia.trees.3, fia.trees.3$SPCD==15) # & fia.trees.3$PREVDIA.cm >= 50 & fia.trees.3$Growth.mm.yr > -10 & fia.trees.3$REMPER > 5)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr)
ABCO <- subset(fia.trees.3, fia.trees.3$SPCD==15 & fia.trees.3$PREVDIA.cm >= 50) # & fia.trees.3$Growth.mm.yr > -10 & fia.trees.3$REMPER > 5)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr)
ABCO <- subset(fia.trees.3, fia.trees.3$SPCD==15 & fia.trees.3$PREVDIA.cm >= 50 & fia.trees.3$Growth.mm.yr > -10) # & fia.trees.3$REMPER > 5)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr)
ABCO <- subset(fia.trees.3, fia.trees.3$SPCD==15 & fia.trees.3$PREVDIA.cm >= 50 & fia.trees.3$Growth.mm.yr > -10 & fia.trees.3$REMPER > 5)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr)
reg1 <- lm(ABCO$Growth.mm.yr ~ ABCO$PREVDIA.cm)
abline(reg1)
summary(reg1)
ABCO <- subset(fia.trees.3, fia.trees.3$SPCD==15 & fia.trees.3$PREVDIA.cm >= 50 & fia.trees.3$Growth.mm.yr > -10 & fia.trees.3$REMPER > 5 & fia.trees.3$Growth.mm.yr < 20)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr)
reg1 <- lm(ABCO$Growth.mm.yr ~ ABCO$PREVDIA.cm)
abline(reg1)
summary(reg1)
hist(ABCO$DIA, breaks=30)
PIPO <- subset(fia.trees, fia.trees$SPCD==122 & fia.trees$PREVDIA.cm >= 50 & fia.trees$Growth.mm.yr > -10 & fia.trees$REMPER > 5)
plot(PIPO$PREVDIA.cm, PIPO$Growth.mm.yr)
reg2 <- lm(PIPO$Growth.mm.yr ~ PIPO$PREVDIA.cm)
abline(reg2)
summary(reg2)
PIPO <- subset(fia.trees, fia.trees$SPCD==122 & fia.trees$PREVDIA.cm >= 50 & fia.trees$Growth.mm.yr > -10 & fia.trees$REMPER > 5 & fia.trees.3$Growth.mm.yr < 20)
ABCO <- subset(fia.trees.3, fia.trees.3$SPCD==122 & fia.trees.3$PREVDIA.cm >= 50 & fia.trees.3$Growth.mm.yr > -10 & fia.trees.3$REMPER > 5 & fia.trees.3$Growth.mm.yr < 20)
plot(PIPO$PREVDIA.cm, PIPO$Growth.mm.yr)
ABCO <- subset(fia.trees.3, fia.trees.3$SPCD==15 & fia.trees.3$PREVDIA.cm >= 50 & fia.trees.3$Growth.mm.yr > -10 & fia.trees.3$REMPER > 5 & fia.trees.3$Growth.mm.yr < 20)
PIPO <- subset(fia.trees.3, fia.trees.3$SPCD==122 & fia.trees.3$PREVDIA.cm >= 50 & fia.trees.3$Growth.mm.yr > -10 & fia.trees.3$REMPER > 5 & fia.trees.3$Growth.mm.yr < 20)
plot(PIPO$PREVDIA.cm, PIPO$Growth.mm.yr)
nrow(PIPO)
reg2 <- lm(PIPO$Growth.mm.yr ~ PIPO$PREVDIA.cm)
abline(reg2)
summary(reg2)
PIPO <- subset(fia.trees.3, fia.trees.3$SPCD==122 & fia.trees.3$PREVDIA.cm >= 50 & fia.trees.3$Growth.mm.yr > -10 & fia.trees.3$REMPER > 5 & fia.trees.3$Growth.mm.yr < 15)
plot(PIPO$PREVDIA.cm, PIPO$Growth.mm.yr)
reg2 <- lm(PIPO$Growth.mm.yr ~ PIPO$PREVDIA.cm)
abline(reg2)
summary(reg2)
nrow(subset(fia.trees, fia.trees$SITECLCD == 3 & !is.na(fia.trees$PREV_PLT_CN)))
nrow(subset(fia.trees, fia.trees$SITECLCD == 2 & !is.na(fia.trees$PREV_PLT_CN)))
nrow(subset(fia.trees, fia.trees$SITECLCD == 3 & !is.na(fia.trees$PREV_PLT_CN & SPCD = 15)))
nrow(subset(fia.trees, fia.trees$SITECLCD == 3 & !is.na(fia.trees$PREV_PLT_CN & SPCD == 15)))
nrow(subset(fia.trees, fia.trees$SITECLCD == 2 & !is.na(fia.trees$PREV_PLT_CN & SPCD == 15)))
nrow(subset(fia.trees, fia.trees$SITECLCD == 3 & !is.na(fia.trees$PREV_PLT_CN & SPCD == 122)))
nrow(subset(fia.trees, fia.trees$SITECLCD == 2 & !is.na(fia.trees$PREV_PLT_CN & SPCD == 122)))
# Explore the relationship between PREVDIA.cm and Growth.mm.yr (using fia.trees from Step 9)
setwd("C:/Users/Carmen/Dropbox (Stephens Lab)/SORTIE/FIA_Data/output_plot_file_dir")
fia.trees <- fia.state.trees
# Add growth in mm/yr
fia.trees$Growth.mm.yr <- ((fia.trees$DIA - fia.trees$PREVDIA) * 25.4) / fia.trees$REMPER
# Subset my data to only include second SITECLCD and only repeated plots
fia.trees.3 <- subset(fia.trees, fia.trees$SITECLCD == 3 & !is.na(fia.trees$PREV_PLT_CN))
ABCO <- subset(fia.trees.3, fia.trees.3$SPCD==15 & fia.trees.3$PREVDIA.cm >= 50 & fia.trees.3$Growth.mm.yr > -10 & fia.trees.3$REMPER > 5 & fia.trees.3$Growth.mm.yr < 20)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr)
reg1 <- lm(ABCO$Growth.mm.yr ~ ABCO$PREVDIA.cm)
abline(reg1)
summary(reg1)
PIPO <- subset(fia.trees.3, fia.trees.3$SPCD==122 & fia.trees.3$PREVDIA.cm >= 50 & fia.trees.3$Growth.mm.yr > -10 & fia.trees.3$REMPER > 5 & fia.trees.3$Growth.mm.yr < 15)
plot(PIPO$PREVDIA.cm, PIPO$Growth.mm.yr)
reg2 <- lm(PIPO$Growth.mm.yr ~ PIPO$PREVDIA.cm)
abline(reg2)
summary(reg2)
reg1 <- lm(ABCO$Growth.mm.yr ~ ABCO$PREVDIA.cm)
abline(reg1)
dev.off()
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr)
abline(reg1)
5*2.54
ABCO <- subset(fia.trees.3, fia.trees.3$SPCD==15 & fia.trees.3$DIA >= 5 & fia.trees.3$Growth.mm.yr > -10 & fia.trees.3$REMPER > 5 & fia.trees.3$Growth.mm.yr < 20)
plot(ABCO$PREVDIA.cm, ABCO$Growth.mm.yr)
reg1 <- lm(ABCO$Growth.mm.yr ~ ABCO$PREVDIA.cm)
abline(reg1)
summary(reg1)
####################################################
#
#   Growth Model 7
#
library(likelihood)
######################################################
# Target species - these are the same as top.species in script 9_Prep_Growth_Data
######################################################
top.species <- c(264, 231, 818, 805, 202, 122, 119, 117, 116, 108, 631, 64, 492, 81,
361, 312, 20, 15, 21, 352, 475, 431,103,746,815)
top.species <- sort(top.species)
# Create a simple table with the letter species code and number species code matching up. THis will be helpful later on.
setwd("C:/Users/Carmen/Dropbox (Stephens Lab)/SORTIE/FIA_Data/Raw_Data")
# setwd("~/Dropbox (Stephens Lab)/SORTIE/FIA_Data/Raw_Data") # Mac
species.codes <- read.csv("REF_SPECIES.csv")
species.codes <- subset(species.codes, species.codes$SPCD %in% top.species, select = c(SPCD, SPECIES_SYMBOL))
species.codes <- species.codes[order(species.codes$SPCD),]
names(top.species) <- species.codes$SPECIES_SYMBOL
species.codes # check that they match
# Index number of target species (Change this for each run)
spp <- 1 # Change this to run the code for a different species
date.time <- "20160404_1753" # Change this each time you run the analysis to keep track of results files
spname = names(top.species)[spp]
setwd("C:/Users/Carmen/Dropbox (Stephens Lab)/SORTIE/FIA_Data/output_tree_file_dir") # PC
# setwd("~/Dropbox (Stephens Lab)/SORTIE/FIA_Data/output_tree_file_dir") # Mac
load(file=paste(spname, "-", top.species[spp], "Growth Base V2.3.Rdata")) # this loads matrices of targets, neighbors, distances, dbhs, species
dbhs <- ifelse(dbhs < 0,NA,dbhs)        # eliminate negative dbhs. use this to sum all BA (adults and saplings)
ba <- pi*(dbhs/2)^2                     # dbhs is based on PREVDIAM, so totba is based on previous diam
totba <- rowSums(ba,na.rm=T)
meanba <- rowMeans(ba,na.rm=T)                  # this is based on previous diameter
baratio <- meanba/targets$PREV_BA               # baratio is the ratio of mean ba of neighbors to the ba of target tree
baratio <- ifelse(is.na(baratio),1,baratio)     # handles cases where target is the only tree in the plot
targets$temp.K <- targets$Annual.mean.temp.C + 273.15
######################################################
# Model
######################################################
model.size <- function(SDG, sizeX0, sizeXb)
{
size.effect <- exp(-0.5*((log((targets$PREVDIA.cm)/(sizeX0))/sizeXb))^2) # Set to Alternative Model 1
SDG[targets$site.group] * size.effect # SDG is site group effect (1-3)
}
######################################################
# Analysis
######################################################
par <- list(SDG = c(10, 10, 10),
sizeX0 = 60, # experiment with changing this from 30 to 60
sizeXb = 2,
sd = 2)
par_hi <- list(SDG = c(500, 500, 500),
sizeX0 = 1000, # experiment with moving from 500 to 1000
sizeXb = 100, # experiment with changing from 50 to 100,
sd = 1000)
par_lo <- list(SDG = c(0, 0, 0),
sizeX0 = 0,
sizeXb = 0.2,
sd = 0.2)
names(par$SDG) <- c("SDG1", "SDG2", "SDG3")
var <- list(mean = "predicted", x = "Growth.mm.yr", log=T)
results<-anneal(model = model.size, par = par, var = var, source_data = targets, par_lo = par_lo,
par_hi = par_hi, pdf = dnorm, dep_var = "Growth.mm.yr", initial_temp = 4,temp_red = 0.95, max_iter = 1000)
setwd("C:/Users/Carmen/Dropbox (Stephens Lab)/SORTIE/FIA_Data/Growth_results/ABCO_Test_Growth/Size_Only")
#setwd("~/Dropbox (Stephens Lab)/SORTIE/FIA_Data/Growth_results/ABCO_Test_Growth/Size_Only") # Mac
write_results(results,paste(spname, " Growth Model 7 R results Size", date.time,".txt"),data=F, print_whole_hist=F)
save(results,file=paste(spname, " Growth Model 7 R results Size", date.time,".Rdata"))
plot(targets$PREVDIA.cm, targets$Growth.mm.yr)
load(paste(spname, " Growth Model 7 R results Size", date.time,".Rdata"))
sizeX0 <- results$best_pars$sizeX0
sizeXb <- results$best_pars$sizeXb
SDG <- results$best_pars$SDG
dev.off()
results.growth.size <- model.size(SDG, sizeX0, sizeXb)
plot(targets$Growth.mm.yr, results.growth.size)
abline(1,1)
setwd("C:/Users/Carmen/Desktop/vortex/output/master_county_data")
risk <- read.csv("cleanedrisk.csv")
social <- read.csv("cleanedsocial.csv")
?scale
names(risk)
risk$tornado_tot_intensity <- scale(risk$tornado_tot_intensity)
risk <- read.csv("cleanedrisk.csv")
social <- read.csv("cleanedsocial.csv")
risk$hail_scaled <- scale(risk$hail_tot_intensity) # default for scale is substract mean, divide by sd
risk$tornado_scaled <- scale(risk$tornado_tot_intensity)
risk$fire_scaled <- scale(risk$highfirerisk)
risk$wind_scaled <- scale(risk$wind_tot_intensity)
risk$summed_index <- sum(risk$hail_scaled, risk$tornado_scaled, risk$wind_scaled, risk$fire_scaled)
View(risk)
?sum
summary(risk$summed_index)
risk$summed_index <- (risk$hail_scaled + risk$tornado_scaled + risk$wind_scaled + risk$fire_scaled)
summary(risk$summed_index)
risk$risk_ind_sum <- (risk$hail_scaled + risk$tornado_scaled + risk$wind_scaled + risk$fire_scaled)
summary(risk$summed_index)
write.csv(risk, "scaledrisk.csv")
trial <- read.csv("scaledrisk.csv")
View(trial)
write.csv(risk, "scaledrisk.csv", row.names = FALSE)
trial <- read.csv("scaledrisk.csv")
View(trial)
setwd("C:/Users/Carmen/Desktop/vortex/output/master_county_data")
risk <- read.csv("cleanedrisk.csv")
social <- read.csv("cleanedsocial.csv")
# Standardize all risk variables
names(risk)
risk$hail_scaled <- scale(risk$hail_tot_intensity) # default for scale is substract mean, divide by sd
risk$tornado_scaled <- scale(risk$tornado_tot_intensity)
risk$wind_scaled <- scale(risk$wind_tot_intensity)
risk$fire_scaled <- scale(risk$highfirerisk)
# Create cumulative risk index
risk$risk_ind_sum <- (risk$hail_scaled + risk$tornado_scaled + risk$wind_scaled + risk$fire_scaled)
write.csv(risk, "scaledrisk.csv", row.names = FALSE)
trial <- read.csv("scaledrisk.csv")
View(trial)
shiny::runApp('C:/Users/Carmen/Desktop/vortex/shiny/app1')
setwd("C:/Users/Carmen/Desktop/vortex/shiny/app1")
runApp()
library(maps)
install.packages("maps")
library(mapproj)
install.packages("mapproj")
library(ggplot2)
library(colormap)
install.packages("colormap")
install.packages("Colormap")
library(tidyr)
install.packages("tidyr")
library(stringr)
library(colormap)
install.packages("colormap")
devtools::install_github("matthewkling/colormap")
install.packages("devtools")
devtools::install_github("matthewkling/colormap")
runApp()
e <- read.csv("data/cleanedcounty.csv") # exposure data
runApp()
runApp()
shiny::runApp()
setwd(~/documents/vortex/shiny/app1)
setwd("~/documents/vortex/shiny/app1")
e <- read.csv("data/cleanedcounty.csv") # exposure data
ds <- read.csv("data/cleanedsocial.csv") # exposure data
dr <- read.csv("data/cleanedrisk.csv") # exposure data
dr <- read.csv("data/cleanedrisk.csv") # exposure data
head(dr)
ds <- select(read.csv("data/cleanedsocial.csv"), -X) # exposure data
ds <- select(read.csv("data/cleanedsocial.csv"), -X)
dr <- sekect(read.csv("data/cleanedrisk.csv"), -X)
dr <- select(read.csv("data/cleanedrisk.csv"), -X)
if(require(colormap)) install_github("matthewkling/colormap", "colormap") # Add the package colormap that Matt created because he's a bamf.
require(colormap)
x <- require(colormap)
x
x <- require(colorm)
x
library(devtools)
library(maps)
library(mapproj)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
if(!require(colormap)) install_github("matthewkling/colormap", "colormap") # Add the package colormap that Matt created because he's a bamf.
select <- dplyr::select
# load and merge data
e <- read.csv("data/cleanedcounty.csv") # exposure data
ds <- select(read.csv("data/cleanedsocial.csv"), -X)
dr <- select(read.csv("data/cleanedrisk.csv"), -X)
ds <- select(read.csv("data/cleanedsocial.csv"), -X)
dr <- select(read.csv("data/cleanedrisk.csv"), -X)
FIPS <- maps::county.fips # fips-to-name dictionary from maps library
e <- full_join(ds, dr)
str(ds)
str(dr)
ds <- select(read.csv("data/cleanedsocial.csv", stringsAsFactors=F), -X)
dr <- select(read.csv("data/cleanedrisk.csv", stringsAsFactors=F), -X)
FIPS <- maps::county.fips # fips-to-name dictionary from maps library
e <- full_join(ds, dr)
str(ds)
str(dr)
# load and merge data
#e <- read.csv("data/cleanedcounty.csv") # exposure data
ds <- select(read.csv("data/cleanedsocial.csv", stringsAsFactors=F), -X)
dr <- select(read.csv("data/cleanedrisk.csv", stringsAsFactors=F), -X) %>%
mutate(state_fips=as.integer(state_fips), county_fips=as.integer(county_fips))
FIPS <- maps::county.fips # fips-to-name dictionary from maps library
e <- full_join(ds, dr)
str(ds)
str(ds)
str(dr)
?full_join
e <- full_join(ds, dr, "state_fips", "county_fips")
head(e)
ds <- read.csv("data/cleanedsocial.csv", stringsAsFactors=F) %>%
ds <- read.csv("data/cleanedsocial.csv", stringsAsFactors=F) %>%
ds <- read.csv("data/cleanedsocial.csv", stringsAsFactors=F) %>%
select(-X, -STNAME, -CTYNAME, -land_area)
ds <- read.csv("data/cleanedsocial.csv", stringsAsFactors=F) %>%
select(-X, -STNAME, -CTYNAME, -land_area)
ds <- read.csv("data/cleanedsocial.csv", stringsAsFactors=F) %>%
select(-X, -STNAME, -CTYNAME, -land_area)
dr <- read.csv("data/cleanedrisk.csv", stringsAsFactors=F) %>%
select(-X, -STNAME, -CTYNAME, -land_area) %>%
mutate(state_fips=as.integer(state_fips), county_fips=as.integer(county_fips))
str(dr)
FIPS <- maps::county.fips # fips-to-name dictionary from maps library
e <- full_join(ds, dr)
e <- full_join(ds, dr) %>%
mutate(fips = as.integer(paste0(state_fips, str_pad(county_fips, 3, "left", 0)))) %>%
left_join(FIPS, .)
head(e)
e <- full_join(ds, dr) %>%
mutate(fips = as.integer(paste0(state_fips, str_pad(county_fips, 3, "left", 0)))) %>%
left_join(FIPS, .)
runApp()
library(devtools)
library(maps)
library(mapproj)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
if(!require(colormap)) install_github("matthewkling/colormap", "colormap") # Add the package colormap that Matt created because he's a bamf.
select <- dplyr::select
# load and merge data
#e <- read.csv("data/cleanedcounty.csv") # exposure data
ds <- read.csv("data/cleanedsocial.csv", stringsAsFactors=F) %>%
select(-X, -STNAME, -CTYNAME, -land_area)
dr <- read.csv("data/cleanedrisk.csv", stringsAsFactors=F) %>%
select(-X, -STNAME, -CTYNAME, -land_area) %>%
mutate(state_fips=as.integer(state_fips), county_fips=as.integer(county_fips))
FIPS <- maps::county.fips # fips-to-name dictionary from maps library
e <- full_join(ds, dr) %>%
mutate(fips = as.integer(paste0(state_fips, str_pad(county_fips, 3, "left", 0)))) %>%
left_join(FIPS, .)
head(e)
str(e)
e <- full_join(ds, dr)
dr <- read.csv("data/cleanedrisk.csv", stringsAsFactors=F) %>%
select(-X, -STNAME, -CTYNAME, -land_area) %>%
mutate(state_fips=as.integer(state_fips), county_fips=as.integer(county_fips))
dr <- read.csv("data/cleanedrisk.csv", stringsAsFactors=F) %>%
select(-STNAME, -CTYNAME, -land_area) %>%
mutate(state_fips=as.integer(state_fips), county_fips=as.integer(county_fips))
ds <- read.csv("data/cleanedsocial.csv", stringsAsFactors=F) %>%
select(-X, -STNAME, -CTYNAME, -land_area)
FIPS <- maps::county.fips # fips-to-name dictionary from maps library
e <- full_join(ds, dr)
e <- full_join(ds, dr) %>%
mutate(fips = as.integer(paste0(state_fips, str_pad(county_fips, 3, "left", 0)))) %>%
left_join(FIPS, .)
